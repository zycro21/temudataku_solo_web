generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bookings {
  id                 Int                @id
  mentee_id          Int
  session_id         Int
  booking_date       DateTime?          @default(now()) @db.Timestamp(6)
  status             String?            @db.VarChar
  special_requests   String?
  created_at         DateTime?          @default(now()) @db.Timestamp(6)
  updated_at         DateTime?          @db.Timestamp(6)
  users              users              @relation(fields: [mentee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  mentoring_sessions mentoring_sessions @relation(fields: [session_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payments           payments[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model certificates {
  id                 Int                @id
  mentee_id          Int
  service_id         Int
  certificate_number String             @unique @db.VarChar
  issue_date         DateTime?          @default(now()) @db.Timestamp(6)
  certificate_path   String?            @db.VarChar
  projects_data      Json?              @db.Json
  status             String?            @db.VarChar
  created_at         DateTime?          @default(now()) @db.Timestamp(6)
  updated_at         DateTime?          @db.Timestamp(6)
  users              users              @relation(fields: [mentee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  mentoring_services mentoring_services @relation(fields: [service_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model feedback {
  id                 Int                @id
  session_id         Int
  user_id            Int
  rating             Int
  comment            String?
  submitted_date     DateTime?          @default(now()) @db.Timestamp(6)
  created_at         DateTime?          @default(now()) @db.Timestamp(6)
  mentoring_sessions mentoring_sessions @relation(fields: [session_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users              users              @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model mentor_profiles {
  id                    Int                  @id
  user_id               Int                  @unique
  expertise             String?
  bio                   String?
  experience            String?
  availability_schedule Json?                @db.Json
  hourly_rate           Decimal?             @db.Decimal
  is_verified           Boolean?             @default(false)
  created_at            DateTime?            @default(now()) @db.Timestamp(6)
  updated_at            DateTime?            @db.Timestamp(6)
  users                 users                @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  mentoring_services    mentoring_services[]
  practices             practices[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mentoring_services {
  id                 Int                  @id
  mentor_id          Int
  service_name       String               @db.VarChar
  description        String?
  price              Decimal              @db.Decimal
  service_type       String?              @db.VarChar
  max_participants   Int?
  duration_days      Int
  is_active          Boolean?             @default(true)
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @db.Timestamp(6)
  certificates       certificates[]
  mentor_profiles    mentor_profiles      @relation(fields: [mentor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  mentoring_sessions mentoring_sessions[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mentoring_sessions {
  id                 Int                @id
  service_id         Int
  start_time         DateTime           @db.Timestamp(6)
  end_time           DateTime           @db.Timestamp(6)
  duration_minutes   Int
  meeting_link       String?            @db.VarChar
  status             String?            @db.VarChar
  notes              String?
  created_at         DateTime?          @default(now()) @db.Timestamp(6)
  updated_at         DateTime?          @db.Timestamp(6)
  bookings           bookings[]
  feedback           feedback[]
  mentoring_services mentoring_services @relation(fields: [service_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  projects           projects[]
}

model notifications {
  id           Int       @id
  user_id      Int
  type         String    @db.VarChar
  title        String    @db.VarChar
  message      String?
  is_read      Boolean?  @default(false)
  created_date DateTime? @default(now()) @db.Timestamp(6)
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  users        users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model payments {
  id                 Int                  @id
  booking_id         Int
  amount             Decimal              @db.Decimal
  payment_date       DateTime?            @db.Timestamp(6)
  payment_method     String?              @db.VarChar
  transaction_id     String?              @db.VarChar
  status             String?              @db.VarChar
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @db.Timestamp(6)
  bookings           bookings             @relation(fields: [booking_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  practice_purchases practice_purchases[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model practice_files {
  id                 Int                @id
  material_id        Int
  file_name          String             @db.VarChar
  file_path          String             @db.VarChar
  file_type          String             @db.VarChar
  file_size          Int?
  order_number       Int
  created_at         DateTime?          @default(now()) @db.Timestamp(6)
  updated_at         DateTime?          @db.Timestamp(6)
  practice_materials practice_materials @relation(fields: [material_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model practice_materials {
  id                Int                 @id
  practice_id       Int
  title             String              @db.VarChar
  description       String?
  order_number      Int
  created_at        DateTime?           @default(now()) @db.Timestamp(6)
  updated_at        DateTime?           @db.Timestamp(6)
  practice_files    practice_files[]
  practices         practices           @relation(fields: [practice_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  practice_progress practice_progress[]
}

model practice_progress {
  id                 Int                @id
  user_id            Int
  practice_id        Int
  material_id        Int
  is_completed       Boolean?           @default(false)
  last_accessed      DateTime?          @db.Timestamp(6)
  time_spent_seconds Int?               @default(0)
  created_at         DateTime?          @default(now()) @db.Timestamp(6)
  updated_at         DateTime?          @db.Timestamp(6)
  practice_materials practice_materials @relation(fields: [material_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  practices          practices          @relation(fields: [practice_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users              users              @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model practice_purchases {
  id               Int             @id
  user_id          Int
  practice_id      Int
  purchase_date    DateTime?       @default(now()) @db.Timestamp(6)
  status           String?         @db.VarChar
  payment_id       Int?
  referral_code_id Int?
  created_at       DateTime?       @default(now()) @db.Timestamp(6)
  updated_at       DateTime?       @db.Timestamp(6)
  payments         payments?       @relation(fields: [payment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  practices        practices       @relation(fields: [practice_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  referral_codes   referral_codes? @relation(fields: [referral_code_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users            users           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model practice_reviews {
  id             Int       @id
  user_id        Int
  practice_id    Int
  rating         Int
  comment        String?
  submitted_date DateTime? @default(now()) @db.Timestamp(6)
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  updated_at     DateTime? @db.Timestamp(6)
  practices      practices @relation(fields: [practice_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users          users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model practices {
  id                 Int                  @id
  mentor_id          Int
  title              String               @db.VarChar
  description        String?
  thumbnail_image    String?              @db.VarChar
  price              Decimal              @db.Decimal
  practice_type      String?              @db.VarChar
  category           String?              @db.VarChar
  tags               Json?                @db.Json
  is_active          Boolean?             @default(true)
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @db.Timestamp(6)
  practice_materials practice_materials[]
  practice_progress  practice_progress[]
  practice_purchases practice_purchases[]
  practice_reviews   practice_reviews[]
  mentor_profiles    mentor_profiles      @relation(fields: [mentor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model projects {
  id                 Int                @id
  mentee_id          Int
  session_id         Int
  title              String             @db.VarChar
  description        String?
  file_path          String?            @db.VarChar
  submission_date    DateTime?          @default(now()) @db.Timestamp(6)
  plagiarism_score   Decimal?           @db.Decimal
  nilai              Decimal?           @db.Decimal
  created_at         DateTime?          @default(now()) @db.Timestamp(6)
  updated_at         DateTime?          @db.Timestamp(6)
  users              users              @relation(fields: [mentee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  mentoring_sessions mentoring_sessions @relation(fields: [session_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model referral_codes {
  id                    Int                  @id
  owner_id              Int
  code                  String               @unique @db.VarChar
  discount_percentage   Decimal              @db.Decimal
  commission_percentage Decimal              @db.Decimal
  created_date          DateTime?            @default(now()) @db.Timestamp(6)
  expiry_date           DateTime?            @db.Timestamp(6)
  is_active             Boolean?             @default(true)
  created_at            DateTime?            @default(now()) @db.Timestamp(6)
  updated_at            DateTime?            @db.Timestamp(6)
  practice_purchases    practice_purchases[]
  users                 users                @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model roles {
  id          Int          @id
  role_name   String       @unique @db.VarChar
  description String?
  created_at  DateTime?    @default(now()) @db.Timestamp(6)
  user_roles  user_roles[]
}

model user_behavior {
  id           Int       @id
  user_id      Int?
  page_visited String    @db.VarChar
  action       String?   @db.VarChar
  timestamp    DateTime? @default(now()) @db.Timestamp(6)
  ip_address   String?   @db.VarChar
  user_agent   String?   @db.VarChar
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  users        users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user_roles {
  id            Int       @id
  user_id       Int
  role_id       Int
  assigned_date DateTime? @default(now()) @db.Timestamp(6)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  roles         roles     @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users         users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id                         Int                  @id
  email                      String               @unique @db.VarChar
  password_hash              String               @db.VarChar
  full_name                  String               @db.VarChar
  phone_number               String?              @db.VarChar
  profile_picture            String?              @db.VarChar
  city                       String?              @db.VarChar
  province                   String?              @db.VarChar
  is_email_verified          Boolean?             @default(false)
  verification_token         String?              @db.VarChar
  verification_token_expires DateTime?            @db.Timestamp(6)
  registration_date          DateTime?            @default(now()) @db.Timestamp(6)
  last_login                 DateTime?            @db.Timestamp(6)
  is_active                  Boolean?             @default(true)
  created_at                 DateTime?            @default(now()) @db.Timestamp(6)
  updated_at                 DateTime?            @db.Timestamp(6)
  bookings                   bookings[]
  certificates               certificates[]
  feedback                   feedback[]
  mentor_profiles            mentor_profiles?
  notifications              notifications[]
  practice_progress          practice_progress[]
  practice_purchases         practice_purchases[]
  practice_reviews           practice_reviews[]
  projects                   projects[]
  referral_codes             referral_codes[]
  user_behavior              user_behavior[]
  user_roles                 user_roles[]
}
